{"version":3,"sources":["components/ListForm/ListForm.js","components/List/List.js","components/Todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["ListForm","props","useState","todoValue","setTodoValue","className","onSubmit","event","preventDefault","addTodo","todo","type","id","placeholder","value","onChange","target","List","todos","map","onClick","onRemove","bind","Todo","params","todoList","setTodoList","useEffect","fetch","then","response","json","responseData","loadData","key","push","removeHandler","useCallback","todoId","method","prevTodo","filter","todoData","body","JSON","stringify","headers","name","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAiCeA,EA9BE,SAAAC,GAEf,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAQE,OACE,yBAASC,UAAU,kBAAnB,SACI,qBAAKA,UAAU,OAAf,SACI,uBAAMC,SATI,SAACC,GACpBA,EAAMC,iBACNP,EAAMQ,QAAQ,CAACC,KAAMP,IACrBC,EAAa,KAMJ,UACE,sBAAMC,UAAU,eAAhB,SACE,uBAAOM,KAAK,OAAOC,GAAG,OAAOC,YAAY,aACrCC,MAAOX,EAAWY,SAAU,SAAAR,GAC1BH,EAAaG,EAAMS,OAAOF,YAGlC,sBAAMT,UAAU,2BAAhB,SACE,wBAAQM,KAAK,SAAb,2BCHHM,G,MAlBF,SAAChB,GACV,OACI,0BAASI,UAAU,kBAAnB,UACI,2CACA,6BACKJ,EAAMiB,MAAMC,KAAI,SAAAT,GAAI,OACjB,+BACI,+BAAOA,EAAKA,OACZ,+BACI,wBAAQU,QAASnB,EAAMoB,SAASC,K,UAAWZ,EAAKE,IAAhD,mBAHCF,EAAKE,cCqDnBW,EAzDF,SAACtB,EAAOuB,GAEjB,MAAgCtB,mBAAS,IAAzC,mBAAOuB,EAAP,KAAiBC,EAAjB,KAmBAC,qBAAU,WACNC,MAAM,uEACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAMC,EAAW,GACjB,IAAK,IAAMC,KAAOF,EACdC,EAASE,KAAK,CACZvB,GAAIsB,EACJxB,KAAMsB,EAAaE,GAAKxB,OAGhCgB,EAAYO,QAEb,IAGH,IAAMG,EAAgBC,uBAAY,SAAAC,GAChCV,MAAM,kEAAD,OAAmEU,EAAnE,SAAkF,CACrFC,OAAQ,WAETV,MAAK,SAAAC,GACFJ,GAAY,SAAAc,GAAQ,OACpBA,EAASC,QAAO,SAAA/B,GAAI,OAAIA,EAAKE,KAAO0B,UAErC,MACF,IAEL,OACI,gCACG,cAAC,EAAD,CAAU7B,QA9CM,SAACiC,GACtBd,MAAM,sEAAuE,CAC7EW,OAAQ,OACRI,KAAMC,KAAKC,UAAUH,GACrBI,QAAS,CAAE,eAAgB,sBACtBjB,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJN,GAAY,SAAAc,GAAQ,4BACbA,GADa,cAEf5B,GAAIoB,EAAae,MAASL,WAEhCb,MAAK,kBAmCL,cAAC,EAAD,CAAMX,MAAOO,EACRJ,SAAUe,QC9CXY,MARf,WACE,OACE,qBAAK3C,UAAU,MAAf,SACI,cAAC,EAAD,OCMO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1f8cfcb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ListForm.css';\r\n\r\nconst ListForm = props => {\r\n\r\n  const [todoValue, setTodoValue] = useState('');\r\n\r\n  const submitHandler = (event) => {\r\n     event.preventDefault();\r\n     props.addTodo({todo: todoValue});\r\n     setTodoValue('');\r\n  }\r\n\r\n    return (\r\n      <section className=\"ingredient-form\">\r\n          <div className=\"card\">\r\n              <form onSubmit={submitHandler}>\r\n                <span className=\"form-control\">\r\n                  <input type=\"text\" id=\"todo\" placeholder=\"Add a todo\"\r\n                      value={todoValue} onChange={event => {\r\n                        setTodoValue(event.target.value);\r\n                      }}/>\r\n                </span>\r\n                <span className=\"ingredient-form__actions\">\r\n                  <button type=\"submit\">Add</button>\r\n                </span>\r\n              </form>\r\n          </div>\r\n      </section>\r\n    );\r\n    \r\n}\r\n\r\nexport default ListForm;","import React from 'react';\r\nimport './List.css'\r\n\r\nconst List = (props) => {\r\n    return (\r\n        <section className=\"ingredient-list\">\r\n            <h2>Todo List</h2>\r\n            <ul>\r\n                {props.todos.map(todo => (\r\n                    <li key={todo.id}>\r\n                        <span>{todo.todo}</span>\r\n                        <span>\r\n                            <button onClick={props.onRemove.bind(this, todo.id)}>x</button>\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default List;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport ListForm from '../ListForm/ListForm';\r\nimport List from '../List/List';\r\n\r\nconst Todo = (props, params) => {\r\n\r\n    const [todoList, setTodoList] = useState([]);\r\n\r\n    const addTodoHandler = (todoData) => {\r\n      fetch('https://react-todo-app-70da8-default-rtdb.firebaseio.com/todos.json', {\r\n      method: 'POST',\r\n      body: JSON.stringify(todoData),\r\n      headers: { 'Content-Type': 'application/json' }\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(responseData => {\r\n            setTodoList(prevTodo => [\r\n                ...prevTodo,\r\n                {id: responseData.name, ...todoData}\r\n            ]);\r\n        }).then(() => {\r\n        \r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('https://react-todo-app-70da8-default-rtdb.firebaseio.com/todos.json')\r\n        .then(response => response.json())\r\n        .then(responseData => {\r\n            const loadData = [];\r\n            for (const key in responseData) {\r\n                loadData.push({\r\n                  id: key,\r\n                  todo: responseData[key].todo,\r\n            });\r\n          }\r\n          setTodoList(loadData);\r\n        });\r\n      }, []);\r\n\r\n\r\n      const removeHandler = useCallback(todoId => {\r\n        fetch(`https://react-todo-app-70da8-default-rtdb.firebaseio.com/todos/${todoId}.json`, {\r\n          method: 'DELETE'\r\n        })\r\n        .then(response => {\r\n            setTodoList(prevTodo =>\r\n            prevTodo.filter(todo => todo.id !== todoId)\r\n          );\r\n        }, []);\r\n      }, []);\r\n\r\n    return (\r\n        <div>\r\n           <ListForm addTodo={addTodoHandler}/> \r\n           <List todos={todoList} \r\n                onRemove={removeHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import './App.css';\nimport Todo from './components/Todo/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}